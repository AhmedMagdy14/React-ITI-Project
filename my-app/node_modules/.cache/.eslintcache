[{"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\index.js":"1","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\App.js":"2","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\GlobalComponents\\ThemeProvider.js":"4","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\components\\Header.js":"5","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\Pages\\Home.js":"6","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\Pages\\Cart.js":"7","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\components\\ProductCard.js":"8"},{"size":734,"mtime":1664811168000,"results":"9","hashOfConfig":"10"},{"size":624,"mtime":1664811168000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1664811168000,"results":"12","hashOfConfig":"10"},{"size":697,"mtime":1664811168000,"results":"13","hashOfConfig":"10"},{"size":2115,"mtime":1664811168000,"results":"14","hashOfConfig":"10"},{"size":2269,"mtime":1664811168000,"results":"15","hashOfConfig":"10"},{"size":3923,"mtime":1664811168000,"results":"16","hashOfConfig":"10"},{"size":1749,"mtime":1664811168000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1681pp2",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\index.js",[],[],"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\App.js",[],[],"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\GlobalComponents\\ThemeProvider.js",["45","46","47"],[],"import React, { createContext, useState, useEffect, useContext} from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = (props) => {\n    const [theme, setTheme] = useState(JSON.parse(localStorage.getItem('theme')) || false );\n    \n    useEffect(()=>{\n        localStorage.setItem('theme', JSON.stringify(theme));\n    },[theme]);\n\n    const setThemeMode = mode => setTheme(mode);\n    return (\n        <ThemeContext.Provider value={{ theme, setThemeMode}}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n};\n\nconst useThemeHook = () =>{\n    const {theme} = useContext(ThemeContext);\n    return [theme];\n}\n\nexport { ThemeProvider, ThemeContext, useThemeHook};","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\components\\Header.js",["48"],[],"import React, { useContext, useState, useEffect } from 'react';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport { ThemeContext } from '../GlobalComponents/ThemeProvider';\nimport { BiSun, BiMoon, BiCart} from 'react-icons/bi';\nimport { Link } from \"@reach/router\";\nimport { useCart } from \"react-use-cart\";\n\n\nconst Header = () => {\n    const { theme, setThemeMode } = useContext(ThemeContext); \n    const [darkMode, setDarkMode] = useState(theme);\n\n    useEffect(()=>{\n        setThemeMode(darkMode);\n        console.log(darkMode)\n    },[darkMode]);\n\n    const {\n        isEmpty,\n        totalItems,\n    } = useCart();\n\n    return (\n        <Navbar collapseOnSelect expand=\"md\"\n                variant={darkMode? 'dark':'light'}\n                className={darkMode? 'bg-light-black border-bottom': 'bg-light border-bottom'}\n                style={{ width: '100%', position: 'fixed', zIndex: 100}}\n        >\n        <Container>\n          <Link to=\"/\">\n            <Navbar.Brand className={darkMode? 'text-dark-primary': 'text-light-primary'}>\n                <b>Simple-ecart</b>\n            </Navbar.Brand>\n          </Link>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n              <Nav.Link \n                className={darkMode? 'text-dark-primary': 'text-light-primary'}\n                onClick={()=>setDarkMode(!darkMode)}\n              >\n                {darkMode? <BiSun size=\"1.7rem\" />: <BiMoon size=\"1.7rem\" />}\n              </Nav.Link>\n              <Link\n                to=\"/cart\"\n                className={`${darkMode? 'text-dark-primary': 'text-light-primary'} d-flex align-items-center`}\n              >\n                <BiCart size=\"2rem\"/>\n                {!isEmpty && <span style={{ position: 'relative', left: '-21px', top: '-18px'}}>{totalItems}</span>}\n                <span style={{ marginLeft: !isEmpty ? '-13px': 0}}>Cart</span>\n              </Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    );\n};\n\nexport default Header;","C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\Pages\\Home.js",[],[],"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\Pages\\Cart.js",[],[],"C:\\Users\\preda\\OneDrive\\Desktop\\re\\my-app\\src\\components\\ProductCard.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":7,"column":20,"nodeType":"51","messageId":"52","endLine":7,"endColumn":27},{"ruleId":"53","severity":2,"message":"54","line":14,"column":34,"nodeType":"51","messageId":"55","endLine":14,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":30,"column":1,"nodeType":"58","endLine":30,"endColumn":59},{"ruleId":"59","severity":1,"message":"60","line":16,"column":7,"nodeType":"61","endLine":16,"endColumn":17,"suggestions":"62"},"no-unused-vars","'setTime' is assigned a value but never used.","Identifier","unusedVar","no-undef","'setTheme' is not defined.","undef","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setThemeMode'. Either include it or remove the dependency array.","ArrayExpression",["63"],{"desc":"64","fix":"65"},"Update the dependencies array to be: [darkMode, setThemeMode]",{"range":"66","text":"67"},[553,563],"[darkMode, setThemeMode]"]